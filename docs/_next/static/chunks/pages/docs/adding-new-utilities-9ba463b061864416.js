(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9130],{57874:function(a,b){"use strict";b.Z="/_next/static/media/social-square.b622e290e82093c36cca57092ffe494f.jpg"},30904:function(a,b,c){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/adding-new-utilities",function(){return c(9531)}])},9531:function(a,b,c){"use strict";c.r(b),c.d(b,{"default":function(){return l}}),c(67294);var d=c(3905),e=c(41664),f=c(59533),g=c(5679),h=c(53339),i=c(74296);c(55390);var j={Layout:h.L,meta:{title:"Adding New Utilities",description:"Extending Tailwind with your own custom utility classes."},slug:"adding-new-utilities",tableOfContents:[{title:"Using CSS",slug:"using-css",children:[{title:"Generating responsive variants",slug:"generating-responsive-variants",children:[]},{title:"Generating dark mode variants",slug:"generating-dark-mode-variants",children:[]},{title:"Generating state variants",slug:"generating-state-variants",children:[]}]},{title:"Using a plugin",slug:"using-a-plugin",children:[]}]},k=i.X_;function l(a){var b=a.components,c=function(a,b){if(null==a)return{};var c,d,e=function(a,b){if(null==a)return{};var c,d,e={},f=Object.keys(a);for(d=0;d<f.length;d++)c=f[d],b.indexOf(c)>=0||(e[c]=a[c]);return e}(a,b);if(Object.getOwnPropertySymbols){var f=Object.getOwnPropertySymbols(a);for(d=0;d<f.length;d++)c=f[d],!(b.indexOf(c)>=0)&&Object.prototype.propertyIsEnumerable.call(a,c)&&(e[c]=a[c])}return e}(a,["components"]);return(0,d.kt)(k,Object.assign({},j,c,{components:b,mdxType:"MDXLayout"}),(0,d.kt)("p",null,"Although Tailwind provides a pretty comprehensive set of utility classes out of the box, you may run into situations where you need to add a few of your own."),(0,d.kt)("p",null,"Deciding on the best way to extend a framework can be paralyzing, so here are some best practices to help you add your own utilities in the most idiomatic way possible."),(0,d.kt)("hr",null),(0,d.kt)(g.X,{level:2,id:"using-css",nextElement:{type:"paragraph"}},"Using CSS"),(0,d.kt)("p",null,"The easiest way to add your own utilities to Tailwind is to simply add them to your CSS."),(0,d.kt)("pre",Object.assign({},{className:"language-css"}),(0,d.kt)("code",Object.assign({parentName:"pre"},{className:"language-css"}),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," base",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," components",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," utilities",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@layer")," utilities")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".scroll-snap-none"))," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"scroll-snap-type"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," none",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".scroll-snap-x"))," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"scroll-snap-type"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," x",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".scroll-snap-y"))," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"scroll-snap-type"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," y",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"))),(0,d.kt)("p",null,"By using the ",(0,d.kt)("inlineCode",{parentName:"p"},"@layer")," directive, Tailwind will automatically move those styles to the same place as ",(0,d.kt)("inlineCode",{parentName:"p"},"@tailwind utilities")," to avoid unintended specificity issues."),(0,d.kt)("p",null,"Using the ",(0,d.kt)("inlineCode",{parentName:"p"},"@layer")," directive will also instruct Tailwind to consider those styles for purging when purging the ",(0,d.kt)("inlineCode",{parentName:"p"},"utilities")," layer. Read our ",(0,d.kt)(e.default,{href:"/docs/optimizing-for-production",passHref:!0},(0,d.kt)("a",null,"documentation on optimizing for production"))," for more details."),(0,d.kt)(g.X,{level:3,id:"generating-responsive-variants",nextElement:{type:"paragraph"}},"Generating responsive variants"),(0,d.kt)("p",null,"If youâ€™d like to generate ",(0,d.kt)(e.default,{href:"/docs/responsive-design",passHref:!0},(0,d.kt)("a",null,"responsive variants"))," of your own utilities based on the breakpoints defined in your ",(0,d.kt)("inlineCode",{parentName:"p"},"tailwind.config.js")," file, wrap your utilities in the ",(0,d.kt)("inlineCode",{parentName:"p"},"@variants")," directive and add ",(0,d.kt)("inlineCode",{parentName:"p"},"responsive")," to the list of variants:"),(0,d.kt)("pre",Object.assign({},{className:"language-css"}),(0,d.kt)("code",Object.assign({parentName:"pre"},{className:"language-css"}),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," base",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," components",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," utilities",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@layer")," utilities")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@variants")," responsive")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".scroll-snap-none"))," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"scroll-snap-type"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," none",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".scroll-snap-x"))," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"scroll-snap-type"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," x",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".scroll-snap-y"))," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"scroll-snap-type"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," y",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"))),(0,d.kt)("p",null,"Tailwind will automatically generate prefixed versions of each custom utility that you can use to conditionally apply those styles at different breakpoints:"),(0,d.kt)("pre",Object.assign({},{className:"language-html"}),(0,d.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"<!-- Use `scroll-snap-type: none` by default, then use `scroll-snap-type: x` on medium screens and up -->"),"\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"\""),"scroll-snap-none ",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"code-highlight bg-code-highlight"}),"md:scroll-snap-x"),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"\"")),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")))),(0,d.kt)("p",null,"Learn more about responsive utilities in the ",(0,d.kt)(e.default,{href:"/docs/responsive-design",passHref:!0},(0,d.kt)("a",null,"responsive design documentation")),"."),(0,d.kt)(g.X,{level:3,id:"generating-dark-mode-variants",nextElement:{type:"paragraph"}},"Generating dark mode variants"),(0,d.kt)("p",null,"If youâ€™d like to generate ",(0,d.kt)(e.default,{href:"/docs/dark-mode",passHref:!0},(0,d.kt)("a",null,"dark mode variants"))," of your own utilities, first make sure ",(0,d.kt)("inlineCode",{parentName:"p"},"darkMode")," is set to either ",(0,d.kt)("inlineCode",{parentName:"p"},"media")," or ",(0,d.kt)("inlineCode",{parentName:"p"},"class")," in your ",(0,d.kt)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),(0,d.kt)(f.M,{filename:"tailwind.config.js"},(0,d.kt)("pre",Object.assign({},{className:"language-js"}),(0,d.kt)("code",Object.assign({parentName:"pre"},{className:"language-js"}),"module",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token property-access"}),"exports")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  darkMode",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'media'"),"\n  ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"// ..."),"\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}")))),(0,d.kt)("p",null,"Next, wrap your utilities in the ",(0,d.kt)("inlineCode",{parentName:"p"},"@variants")," directive and add ",(0,d.kt)("inlineCode",{parentName:"p"},"dark")," to the list of variants:"),(0,d.kt)("pre",Object.assign({},{className:"language-css"}),(0,d.kt)("code",Object.assign({parentName:"pre"},{className:"language-css"}),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," base",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," components",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," utilities",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@layer")," utilities")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@variants")," dark")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".filter-none"))," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"filter"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," none",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".filter-grayscale"))," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"filter"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"grayscale"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token number"}),"100"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token unit"}),"%"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"))),(0,d.kt)("p",null,"Tailwind will automatically generate prefixed versions of each custom utility that you can use to conditionally apply those styles at different states:"),(0,d.kt)("pre",Object.assign({},{className:"language-html"}),(0,d.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"\""),"filter-grayscale ",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"code-highlight bg-code-highlight"}),"dark:filter-none"),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"\"")),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")))),(0,d.kt)("p",null,"Learn more about dark mode utilities in the ",(0,d.kt)(e.default,{href:"/docs/dark-mode",passHref:!0},(0,d.kt)("a",null,"dark mode documentation")),"."),(0,d.kt)(g.X,{level:3,id:"generating-state-variants",nextElement:{type:"paragraph"}},"Generating state variants"),(0,d.kt)("p",null,"If youâ€™d like to create ",(0,d.kt)(e.default,{href:"/docs/hover-focus-and-other-states",passHref:!0},(0,d.kt)("a",null,"state variants"))," for your own utilities, wrap your utilities in the ",(0,d.kt)("inlineCode",{parentName:"p"},"@variants")," directive and list the variants youâ€™d like to enable:"),(0,d.kt)("pre",Object.assign({},{className:"language-css"}),(0,d.kt)("code",Object.assign({parentName:"pre"},{className:"language-css"}),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," base",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," components",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@tailwind")," utilities",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@layer")," utilities")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@variants")," hover",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," focus")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".filter-none"))," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"filter"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," none",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".filter-grayscale"))," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"filter"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"grayscale"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token number"}),"100"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token unit"}),"%"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"))),(0,d.kt)("p",null,"Tailwind will automatically generate prefixed versions of each custom utility that you can use to conditionally apply those styles at different states:"),(0,d.kt)("pre",Object.assign({},{className:"language-html"}),(0,d.kt)("code",Object.assign({parentName:"pre"},{className:"language-html"}),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token attr-name"}),"class"),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token attr-value"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation attr-equals"}),"="),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"\""),"filter-grayscale ",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"code-highlight bg-code-highlight"}),"hover:filter-none"),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"\"")),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token tag"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token tag"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"</"),"div"),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),">")))),(0,d.kt)("p",null,"State variants are generated in the same order you list them in the ",(0,d.kt)("inlineCode",{parentName:"p"},"@variants")," directive, so if youâ€™d like one variant to take precedence over another, make sure you list that one last:"),(0,d.kt)("pre",Object.assign({},{className:"language-css"}),(0,d.kt)("code",Object.assign({parentName:"pre"},{className:"language-css"}),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"/* Focus will take precedence over hover */"),"\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@variants")," hover",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," focus")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".filter-grayscale"))," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"filter"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"grayscale"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token number"}),"100"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token unit"}),"%"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"/* ... */"),"\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"/* Hover will take precedence over focus */"),"\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token atrule"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token rule"}),"@variants")," focus",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," hover")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token selector"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token class"}),".filter-grayscale"))," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token property"}),"filter"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),":")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"grayscale"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token number"}),"100"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token unit"}),"%"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token comment"}),"/* ... */"),"\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"))),(0,d.kt)("p",null,"Learn more about state variants in the ",(0,d.kt)(e.default,{href:"/docs/hover-focus-and-other-states",passHref:!0},(0,d.kt)("a",null,"state variants documentation")),"."),(0,d.kt)("hr",null),(0,d.kt)(g.X,{level:2,id:"using-a-plugin",nextElement:{type:"paragraph"}},"Using a plugin"),(0,d.kt)("p",null,"In addition to adding new utility classes directly in your CSS files, you can also add utilities to Tailwind by writing your own plugin:"),(0,d.kt)(f.M,{filename:"tailwind.config.js"},(0,d.kt)("pre",Object.assign({},{className:"language-js"}),(0,d.kt)("code",Object.assign({parentName:"pre"},{className:"language-js"}),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," plugin ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"require"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'tailwindcss/plugin'"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),"\n\nmodule",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token property-access"}),"exports")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  plugins",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"["),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"plugin"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"function"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token parameter"}),(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{")," addUtilities ",(0,d.kt)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}")),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," newUtilities ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'.filter-none'"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n          filter",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'none'"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n        ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n        ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'.filter-grayscale'"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n          filter",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'grayscale(100%)'"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n        ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n      ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n      ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token function"}),"addUtilities"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),"newUtilities",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"["),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'responsive'"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token string"}),"'hover'"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"]"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),"\n  ",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"]"),"\n",(0,d.kt)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n"))),(0,d.kt)("p",null,"This can be a good choice if you want to publish your custom utilities as a library or make it easier to share them across multiple projects."),(0,d.kt)("p",null,"Learn more in the ",(0,d.kt)(e.default,{href:"/docs/plugins#adding-utilities",passHref:!0},(0,d.kt)("a",null,"utility plugin documentation")),"."))}l.isMDXComponent=!0,l.layoutProps=j},59533:function(a,b,c){"use strict";c.d(b,{M:function(){return f}});var d=c(85893),e=c(6774);function f(a){var b=a.filename,c=a.children;return(0,d.jsxs)("div",{className:"mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset",children:[(0,d.jsx)(e.n,{primary:{name:b},showTabMarkers:!1}),(0,d.jsx)("div",{className:"children:my-0 children:!shadow-none children:bg-transparent",children:c})]})}},6774:function(a,b,c){"use strict";c.d(b,{n:function(){return f}});var d=c(85893),e=c(86010);function f(a){var b=a.primary,c=a.secondary,f=a.showTabMarkers,g=a.side,h=a.translucent,i=a.children;return(0,d.jsxs)("div",{className:"flex text-gray-400 text-xs leading-6",children:[(0,d.jsxs)("div",{className:"flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center",children:[b.name,(void 0===f||f)&&(b.saved?(0,d.jsx)("svg",{viewBox:"0 0 4 4",className:"ml-2.5 flex-none w-1 h-1 text-gray-500 overflow-visible",children:(0,d.jsx)("path",{d:"M-1 -1L5 5M5 -1L-1 5",fill:"none",stroke:"currentColor",strokeLinecap:"round"})}):(0,d.jsx)("div",{className:"ml-2.5 flex-none w-1 h-1 rounded-full bg-current"}))]}),(0,d.jsxs)("div",{className:(0,e.Z)("flex-auto flex items-center bg-gray-700/50 border border-gray-500/30","left"===g?"rounded-tl lg:rounded-tr":"rounded-tl",void 0!==h&&h&&"dark:bg-gray-800/50"),children:[(void 0===c?[]:c).map(function(a){var b=a.name,c=a.open,f=a.className;return(0,d.jsx)("div",{className:(0,e.Z)("px-4 py-1 border-r border-gray-200/5",f,{italic:!(void 0===c||c)}),children:b},b)}),i&&(0,d.jsx)("div",{className:"flex-auto flex items-center justify-end px-4 space-x-4",children:i})]})]})}},55390:function(a,b,c){"use strict";c.d(b,{Vw:function(){return e},qm:function(){return f},"$o":function(){return g}});var d=c(85893);function e(a){var b=a.children;return(0,d.jsxs)("div",{className:"flex items-start my-6 space-x-4",children:[(0,d.jsxs)("div",{className:"relative mt-1 w-4 h-4 rounded-full bg-cyan-500 text-white flex items-center justify-center ring-2 ring-cyan-500 dark:bg-sky-500 dark:ring-sky-500",children:[(0,d.jsx)("svg",{width:"6",height:"4.5",className:"overflow-visible","aria-hidden":"true",children:(0,d.jsx)("path",{d:"M6 0L2 4.5L0 2.5",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})}),(0,d.jsx)("div",{className:"absolute top-full mt-1 left-[0.46875rem] w-px h-[1.375rem] bg-cyan-500/30 rounded-full dark:bg-sky-400/30"})]}),(0,d.jsx)("p",{className:"m-0 flex-1 text-base font-semibold text-gray-900 dark:text-gray-200",children:b})]})}function f(a){var b=a.children;return(0,d.jsxs)("div",{className:"flex items-start my-6 space-x-4",children:[(0,d.jsxs)("div",{className:"relative mt-1 w-4 h-4 rounded-full bg-rose-400 text-white flex items-center justify-center ring-2 ring-rose-400 dark:bg-red-400 dark:ring-red-400",children:[(0,d.jsx)("svg",{width:"6",height:"6",className:"overflow-visible","aria-hidden":"true",children:(0,d.jsx)("path",{d:"M0 0L6 6M6 0L0 6",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})}),(0,d.jsx)("div",{className:"absolute top-full mt-1 left-[0.46875rem] w-px h-[1.375rem] bg-rose-200 rounded-full dark:bg-red-200/25"})]}),(0,d.jsx)("p",{className:"m-0 flex-1 text-base font-semibold text-gray-900 dark:text-gray-200",children:b})]})}function g(a){var b=a.children;return(0,d.jsxs)("div",{className:"not-prose mt-6 -mb-1 flex space-x-2",children:[(0,d.jsx)("svg",{className:"flex-none w-5 h-5 text-gray-400 dark:text-gray-600",viewBox:"0 0 20 20",fill:"currentColor","aria-hidden":"true",children:(0,d.jsx)("path",{fillRule:"evenodd",d:"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z",clipRule:"evenodd"})}),(0,d.jsx)("p",{className:"text-gray-700 text-sm font-medium dark:text-gray-200",children:b})]})}},53339:function(a,b,c){"use strict";c.d(b,{L:function(){return l}});var d=c(85893),e=c(21744),f=c(9008),g=c(11163),h=c(57874),i=c(68224),j=c(54713);function k(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function l(a){var b=(0,g.useRouter)();return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(i.D,{suffix:"/"===b.pathname?void 0:"Tailwind CSS",children:a.layoutProps.meta.metaTitle||a.layoutProps.meta.title}),(0,d.jsxs)(f.default,{children:[(0,d.jsx)("meta",{name:"twitter:card",content:"summary"},"twitter:card"),(0,d.jsx)("meta",{name:"twitter:image",content:"https://tailwindcss.com".concat(h.Z)},"twitter:image")]}),(0,d.jsx)(e.C,function(a){for(var b=1;b<arguments.length;b++){var c=null!=arguments[b]?arguments[b]:{},d=Object.keys(c);"function"==typeof Object.getOwnPropertySymbols&&(d=d.concat(Object.getOwnPropertySymbols(c).filter(function(a){return Object.getOwnPropertyDescriptor(c,a).enumerable}))),d.forEach(function(b){k(a,b,c[b])})}return a}({nav:j.u},a))]})}l.nav=j.u}},function(a){a.O(0,[6401,6852,4713,2474,9774,2888,179],function(){return a(a.s=30904)}),_N_E=a.O()}])