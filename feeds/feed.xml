<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Tailwind CSS Blog</title>
        <link>https://teteva.github.io/blog</link>
        <description>All the latest Tailwind CSS news, straight from the team.</description>
        <lastBuildDate>Sat, 25 Dec 2021 04:00:32 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <image>
            <title>Tailwind CSS Blog</title>
            <url>https://teteva.github.io/favicons/favicon-32x32.png?v=3</url>
            <link>https://teteva.github.io/blog</link>
        </image>
        <copyright>All rights reserved 2021, Tailwind Labs</copyright>
        <atom:link href="https://teteva.github.io/feeds/feed.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[Tailwind CSS v2.2]]></title>
            <link>https://teteva.github.io/blog/tailwindcss-2-2</link>
            <guid>Tailwind CSS v2.2</guid>
            <pubDate>Thu, 17 Jun 2021 14:00:00 GMT</pubDate>
            <description><![CDATA[An all-new high-performance CLI tool, ::before and ::after support, sibling selectors, selected text variants, and tons more.]]></description>
            <content:encoded><![CDATA[<p>Well I can’t say we were really planning on it but over the last few weeks we’ve been having a ton of fun dumping new and exciting features into Tailwind and now feels like the right time to cut a release, so here it is — Tailwind CSS v2.2!</p><p>We’ve built-in a new high-performance CLI tool, added <code>::before</code> and <code>::after</code> support, introduced new <code>peer-*</code> variants for sibling styling, added variants for styling highlighted text, and tons more.</p><p>Well I can’t say we were really planning on it but over the last few weeks we’ve been having a ton of fun dumping new and exciting features into Tailwind and now feels like the right time to cut a release, so here it is — Tailwind CSS v2.2!</p><div class="aspect-w-16 aspect-h-9 my-12"><iframe src="https://www.youtube.com/embed/DxcJbrs6rKk" frameBorder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div><p>This has to be one of the most feature-rich Tailwind releases of all-time. Introducing <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a> back in v2.1 has opened the doors to a lot of cool features we couldn’t have easily added otherwise, and this release is loaded with great examples of that.</p><p>Here are the highlights:</p><ul role="list"><li><a href="#all-new-high-performance-tailwind-cli">All-new high-performance Tailwind CLI</a></li><li><a href="#before-and-after-variants">Before and after variants</a></li><li><a href="#first-letter-line-variants">First-letter/line variants</a></li><li><a href="#selected-text-variants">Selected text variants</a></li><li><a href="#list-marker-variants">List marker variants</a></li><li><a href="#sibling-selector-variants">Sibling selector variants</a></li><li><a href="#exhaustive-pseudo-class-support">Exhaustive pseudo-class support</a></li><li><a href="#shorthand-color-opacity-syntax">Shorthand color opacity syntax</a></li><li><a href="#extended-arbitrary-value-support">Extended arbitrary value support</a></li><li><a href="#improved-nesting-support">Improved nesting support</a></li><li><a href="#caret-color-utilities">Caret color utilities</a></li><li><a href="#background-origin-utilities">Background origin utilities</a></li><li><a href="#simplified-transform-and-filter-composition">Simplified transform and filter composition</a></li><li><a href="#per-side-border-color-utilities">Per-side border color utilities</a></li><li><a href="#built-in-safelist-transform-and-extract-support">Built-in safelist, transform, and extract support</a></li></ul><p>For the full details, <a href="https://github.com/tailwindlabs/tailwindcss/releases/tag/v2.2.0">check out the release notes</a> on GitHub.</p><p>It’s important to note that although this is a minor release and there are no breaking changes in the classic engine, <strong>Just-in-Time mode is still in preview and v2.2 introduces a few very small changes that might impact you</strong>, so make sure you read through the <a href="https://github.com/tailwindlabs/tailwindcss/releases/tag/v2.2.0#changes-and-deprecations">changes and deprecations</a> in the release notes when upgrading.</p><p>When you’re ready to upgrade, just install the latest version from npm and you’re off to the races:</p><pre class="language-shell"><code class="language-shell"><span class="token function">npm</span> <span class="token function">install</span> -D tailwindcss@latest</code></pre><hr/><a name="all-new-high-performance-tailwind-cli"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="all-new-high-performance-tailwind-cli"><a href="#all-new-high-performance-tailwind-cli" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>All-new high-performance Tailwind CLI</span></h2><p>We’ve rewritten the Tailwind CLI tool from the ground-up with a performance-first mindset, while also adding support for a bunch of new features.</p><pre class="language-shell"><code class="language-shell">npx tailwindcss -o dist/tailwind.css --watch --jit --purge<span class="token operator">=</span><span class="token string">&quot;./src/**/*.html&quot;</span></code></pre><p>Here are some of the highlights:</p><ul role="list"><li><strong>No installation or configuration necessary</strong> — simply <code>npx tailwindcss -o output.css</code> to compile Tailwind from anywhere. You can even enable JIT mode with the <code>--jit</code> flag and pass in your content files using the <code>--purge</code> option, all without creating a config file.</li><li><strong>Watch mode</strong> — so you can automatically rebuild your CSS whenever you make any changes.</li><li><strong>JIT performance optimizations</strong> — since our CLI is Tailwind-specific we’ve been able to make tons of optimizations that make it the absolute fastest build tool for compiling your CSS in JIT mode.</li><li><strong>Minification support</strong> — now you can minify your CSS with <a href="https://cssnano.co/">cssnano</a> just by adding the <code>--minify</code> flag.</li><li><strong>PostCSS plugin support</strong> — the new CLI will read and respect any extra plugins you configure using a <code>postcss.config.js</code> file.</li></ul><p>It’s fully backwards-compatible with the previous CLI, so if you’ve got any scripts set up already you should be able to upgrade to v2.2 without making any changes to your scripts.</p><p>Check out our <a href="https://tailwindcss.com/docs/installation#using-tailwind-cli">updated Tailwind CLI documentation</a> to learn more.</p><p><em>Note that if you were using the <code>tailwindcss-cli</code> wrapper package, you can safely switch to <code>tailwindcss</code> as we’ve managed to resolve the peer-dependency issues that forced us to create the wrapper package in the first place.</em></p><a name="before-and-after-pseudo-element-variants"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="before-and-after-pseudo-element-variants"><a href="#before-and-after-pseudo-element-variants" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Before and after pseudo-element variants</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>People have been asking for this for years and it’s finally here! We’ve added first-party support for styling pseudo-elements like <code>before</code> and <code>after</code>:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>before:block before:bg-blue-500 after:flex after:bg-pink-300<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>We set <code>content: &quot;&quot;</code> automatically any time you use a <code>before</code> or <code>after</code> variant to make sure the elements are rendered, but you can override it using the new <code>content</code> utilities which have full arbitrary value support:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>before:content-[<span class="token punctuation">&#x27;</span>hello<span class="token punctuation">&#x27;</span>] before:block ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>You can even grab the content from an attribute using the CSS <code>attr()</code> function:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
  <span class="token attr-name">before</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello world<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>before:content-[attr(before)] before:block ...<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>This can be super helpful when your content has spaces in it, since spaces can’t be used in CSS class names.</p><a name="first-letter-line-variants"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="first-letter-line-variants"><a href="#first-letter-line-variants" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>First-letter/line variants</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>We’ve added variants for the <code>first-letter</code> and <code>first-line</code> pseudo-elements, so you can do stuff like drop caps:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>first-letter:text-4xl first-letter:font-bold first-letter:float-left<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  The night was March 31, 1996, and it was finally time for Bret Hart to face
  off against Shawn Michaels in the long anticipated Iron Man match — a 60
  minute war of endurance where the man who scored the most number of falls
  would walk away as the WWF World Heavyweight Champion.
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></code></pre><a name="selected-text-variants"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="selected-text-variants"><a href="#selected-text-variants" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Selected text variants</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>We’ve added a new <code>selection</code> variant that makes it super easy to style highlighted to match your design:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selection:bg-pink-200<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  After nearly a grueling hour of warfare with neither man scoring a fall, Hart
  locked in the Sharpshooter, his signature submission hold. As Michaels
  screamed in pain, the crowd were certain that Hart was about to walk away from
  WrestleMania XII as the still-World Heavyweight Champion.
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></code></pre><p>We’ve even built this feature in such a way that it can be applied to a parent element and cascade down, so you can set a highlight color for your whole site by applying a utility to the body:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selection:bg-pink-200<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
    But Michaels didn&#x27;t give up — he held on until the bell rang and the
    designated 60 minutes was up. Hart walked away content, thinking that
    without a clear winner, the title was his to hold. He was not prepared for
    what would happen next, when Gorilla Monsoon declared the match would
    continue under sudden death rules.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></code></pre><a name="list-marker-variants"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="list-marker-variants"><a href="#list-marker-variants" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>List marker variants</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>You can use the new <code>marker</code> variant to style the bullets or numbers at the beginning of a list:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>WrestleMania XII Results<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>marker:text-gray-500 marker:font-medium<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>
    The British Bulldog, Owen Hart, and Vader defeated Ahmed Johnson, Jake
    Roberts, and Yokozuna
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Roddy Piper defeated Goldust<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Stone Cold Steve Austin defeated Savio Vega<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>The Ultimate Warrior defeated Hunter Hearst Helmsley<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>The Undertaker defeated Diesel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Shawn Michaels defeated Bret Hart<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span></code></pre><p>Like the <code>selection</code> variant, we’ve implemented this in a way that it cascades from the parent, so you don’t have to repeat it for each list item.</p><a name="sibling-selector-variants"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="sibling-selector-variants"><a href="#sibling-selector-variants" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Sibling selector variants</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>Tailwind CSS v2.2 adds new <code>peer-*</code> variants that behave much like the <code>group-*</code> variants, but for targeting sibling elements instead of parent elements.</p><p>This is useful for things like styling an element when a preceding checkbox is checked, doing things like floating labels, and lots more:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>peer sr-only<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>h-4 w-4 bg-gray-200 peer-checked:bg-blue-500<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span></code></pre><p>Just like <code>group</code> can be combined with any other variant, <code>peer</code> can as well, so you have variants like <code>peer-hover</code>, <code>peer-focus</code>, <code>peer-disabled</code>, and loads more at your fingertips.</p><p>The generated CSS uses the <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/General_sibling_combinator">general sibling combinator</a> and looks like this:</p><pre class="language-css"><code class="language-css"><span class="token selector"><span class="token class">.peer</span><span class="token pseudo-class">:checked</span> <span class="token combinator">~</span> <span class="token class">.peer-checked</span><span class="token punctuation">\</span><span class="token class">:bg-blue-500</span></span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode color">#3b82f6</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre><p>So just like in vanilla CSS, it will only work for targeting <em>previous</em> siblings, not siblings that appear later in the DOM.</p><a name="exhaustive-pseudo-class-support"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="exhaustive-pseudo-class-support"><a href="#exhaustive-pseudo-class-support" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Exhaustive pseudo-class support</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>We’ve added variants for basically every single missing pseudo-class we could think of in this release:</p><ul role="list"><li><code>only</code> <em>(only-child)</em></li><li><code>first-of-type</code></li><li><code>last-of-type</code></li><li><code>only-of-type</code></li><li><code>target</code></li><li><code>default</code></li><li><code>indeterminate</code></li><li><code>placeholder-shown</code></li><li><code>autofill</code></li><li><code>required</code></li><li><code>valid</code></li><li><code>invalid</code></li><li><code>in-range</code></li><li><code>out-of-range</code></li></ul><p>Personal favorite in the list is <code>placeholder-shown</code> — when combined with the new sibling selector variants it makes it possible to do cool stuff like floating labels:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>relative<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>peer ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>peer-placeholder-shown:top-4 peer-focus:top-0 ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><a name="shorthand-color-opacity-syntax"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="shorthand-color-opacity-syntax"><a href="#shorthand-color-opacity-syntax" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Shorthand color opacity syntax</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>Instead of using utilities like <code>bg-opacity-50</code>, <code>text-opacity-25</code>, or <code>placeholder-opacity-40</code>, Tailwind CSS v2.2 gives you a new color opacity shorthand you can use to tweak the alpha channel of a color directly in the color utility itself:</p><pre class="language-diff-html"><code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">bg-red-500 bg-opacity-25</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag punctuation">&gt;</span><span class="token plain"></span></span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">bg-red-500/25</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag punctuation">&gt;</span></span></code></pre><p>This means you can now change the opacity of colors anywhere in Tailwind, even where we previously didn’t have specific opacity utilities, like in gradients for example:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-gradient-to-r from-red-500/50<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>The opacity values are taken from your <code>opacity</code> scale, but you can also use arbitrary opacity values using square bracket notation:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-red-500/[0.31]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>If I’m being honest, I am more excited about never having to create another core plugin like <code>placeholderOpacity.js</code> for you people again than I am about actually using the feature. And I’m really excited about the feature, so that says something.</p><a name="extended-arbitrary-value-support"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="extended-arbitrary-value-support"><a href="#extended-arbitrary-value-support" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Extended arbitrary value support</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>We’ve gone over every core plugin in Tailwind to try and add the most flexible arbitrary value support we possibly could, and I think we’ve covered pretty much everything at this point.</p><p>You should be able to whatever arbitrary values you want, just about wherever you want:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-start-[73] placeholder-[#aabbcc] object-[50%] ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>If you find one we missed, open an issue and we’ll sort it out.</p><p>In addition to making arbitrary value support more comprehensive, we’ve also added a new type-hint syntax to handle ambiguous situations. For example, if you are using a CSS variable as an arbitrary value, it’s not always clear what the generated CSS should be:</p><pre class="language-html"><code class="language-html"><span class="token comment">&lt;!-- Is this a font size utility, or a text color utility? --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-[var(--mystery-var)]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Now you can provide a hint to the engine by prefixing the arbitrary value with the type name:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-[color:var(--mystery-var)]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Currently, the supported types are:</p><ul role="list"><li><code>length</code></li><li><code>color</code></li><li><code>angle</code></li><li><code>list</code></li></ul><p>We’ll probably flesh this out even more over time as people discover new edge cases but this should get you very far.</p><a name="improved-nesting-support"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="improved-nesting-support"><a href="#improved-nesting-support" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Improved nesting support</span></h2><p>Since Tailwind introduces a lot of non-standard CSS at-rules like <code>@tailwind</code> and <code>@apply</code>, you can often run into weird output when combining it with a PostCSS nesting plugin like <code>postcss-nested</code> or <code>postcss-nesting</code>.</p><p>To ease the pain here, we’ve included a new PostCSS plugin in the <code>tailwindcss</code> package that acts as a lightweight compatibility layer between existing nesting plugins and Tailwind itself.</p><p>So if you need nesting support in your project, use our plugin, and stick it before Tailwind in your PostCSS plugin list:</p><pre class="language-js"><code class="language-js"><span class="token comment">// postcss.config.js</span>
module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;tailwindcss/nesting&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;tailwindcss&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre><p>By default, it uses <code>postcss-nested</code> under the hood <em>(since that’s what we use to support nesting in Tailwind plugins)</em>, but if you’d like to use <code>postcss-nesting</code> instead, just call our plugin as a function and pass through the <code>postcss-nesting</code> plugin:</p><pre class="language-js"><code class="language-js"><span class="token comment">// postcss.config.js</span>
module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;tailwindcss/nesting&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;postcss-nesting&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;tailwindcss&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre><p>Under the hood, this uses a new <code>screen()</code> function we’ve introduced that you can use to get the expanded media expression from any of your configured breakpoints:</p><pre class="language-css"><code class="language-css"><span class="token comment">/* Input */</span>
<span class="token atrule"><span class="token rule">@media</span> <span class="token function">screen</span><span class="token punctuation">(</span>sm<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token comment">/* ... */</span>
<span class="token punctuation">}</span>

<span class="token comment">/* Output */</span>
<span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> <span class="token number">640</span><span class="token unit">px</span><span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
  <span class="token comment">/* ... */</span>
<span class="token punctuation">}</span></code></pre><p>You probably won’t need to use this yourself but it could be helpful if you’re ever integrating Tailwind with another tool that understands <code>@media</code> but doesn’t handle <code>@screen</code> properly.</p><pre class="language-diff-css"><code class="language-diff-css"><span class="token language-css deleted"><span class="token atrule rule">@screen</span><span class="token atrule"> sm</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token comment">/* ... */</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"></span></span><span class="token language-css inserted"><span class="token plain"></span><span class="token atrule rule">@media</span><span class="token atrule"> </span><span class="token atrule function">screen</span><span class="token atrule punctuation">(</span><span class="token atrule">sm</span><span class="token atrule punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token comment">/* ... */</span><span class="token plain"> </span><span class="token punctuation">}</span></span></code></pre><a name="caret-color-utilities"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="caret-color-utilities"><a href="#caret-color-utilities" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Caret color utilities</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>You can now set the color of the cursor in form fields using the new <code>caret-{color}</code> utilities:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>caret-red-500<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></code></pre><p>These are customizable using the <code>caretColor</code> key in the <code>theme</code> section of your <code>tailwind.config.js</code> file.</p><a name="background-origin-utilities"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="background-origin-utilities"><a href="#background-origin-utilities" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Background origin utilities</span></h2><p>We’ve added new utilities for the <code>background-origin</code> property, which let you control where an element’s background is positioned relative to the element’s border, padding box, or content:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-origin-border p-4 border-4 border-dashed ...<span class="token punctuation">&quot;</span></span>
  <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>...<span class="token punctuation">)</span></span></span><span class="token punctuation">&quot;</span></span></span>
<span class="token punctuation">&gt;</span></span>
  Background is rendered under the border
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-origin-padding p-4 border-4 border-dashed ...<span class="token punctuation">&quot;</span></span>
  <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>...<span class="token punctuation">)</span></span></span><span class="token punctuation">&quot;</span></span></span>
<span class="token punctuation">&gt;</span></span>
  Background is rendered within the border but on top of any padding
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-origin-content p-4 border-4 border-dashed ...<span class="token punctuation">&quot;</span></span>
  <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>...<span class="token punctuation">)</span></span></span><span class="token punctuation">&quot;</span></span></span>
<span class="token punctuation">&gt;</span></span>
  Background is rendered within any padding and under the content
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Learn more in the <a href="https://tailwindcss.com/docs/background-origin">background origin documentation</a>.</p><a name="simplified-transform-and-filter-composition"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="simplified-transform-and-filter-composition"><a href="#simplified-transform-and-filter-composition" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Simplified transform and filter composition</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>The <code>transform</code>, <code>filter</code>, and <code>backdrop-filter</code> classes are no longer necessary to “enable” their respective set of composable utilities.</p><pre class="language-diff-html"><code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">transform scale-50 filter grayscale backdrop-filter backdrop-blur-sm</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag punctuation">&gt;</span><span class="token plain"></span></span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">scale-50 grayscale backdrop-blur-sm</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag punctuation">&gt;</span></span></code></pre><p>Now those features are automatically enabled any time you use any of the relevant sub-utilities.</p><p>It’s important to understand though that because these utilities aren’t needed anymore, you can no longer expect transforms and filters to be “dormant” by default. If you were relying on conditionally “activating” transforms or filters by toggling these classes, you will want to make sure you are toggling the sub-utilities themselves instead:</p><pre class="language-diff-html"><code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">scale-105 -translate-y-1 hover:transform</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag punctuation">&gt;</span><span class="token plain"></span></span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag attr-value">hover:scale-105 hover:-translate-y-1</span><span class="token tag attr-value punctuation">&quot;</span><span class="token tag punctuation">&gt;</span></span></code></pre><p>I don’t expect this will be a real problem for most people, but it’s technically a breaking change which is why we’ve limited this improvement to the JIT engine only.</p><a name="per-side-border-color-utilities"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="per-side-border-color-utilities"><a href="#per-side-border-color-utilities" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Per-side border color utilities</span></h2><p><em>This feature is only available in <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time mode</a></em>.</p><p>Requested at least once a month for the last four years, I’m excited to share that we’ve finally added per-side border color support now that we don’t have to sweat the development stylesheet size.</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>border-2 border-t-blue-500 border-r-pink-500 border-b-green-500 border-l-yellow-500<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Go forth and build ugly websites! <em>(Kidding, kidding, I know they are useful settle the hell down.)</em></p><a name="built-in-safelist-transform-and-extract-support"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="built-in-safelist-transform-and-extract-support"><a href="#built-in-safelist-transform-and-extract-support" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Built-in safelist, transform, and extract support</span></h2><p>We’ve added first-class support for a bunch of important PurgeCSS features and made them work in the JIT engine as well, which doesn’t actually even use PurgeCSS.</p><p>First is <code>safelist</code>, which is super useful if you need to protect specific classes from being removed from your production CSS, perhaps because they are used in content that comes from a database or similar:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  purge<span class="token operator">:</span> <span class="token punctuation">{</span>
    content<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;./src/**/*.html&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    safelist<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&#x27;bg-blue-500&#x27;</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;text-center&#x27;</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;hover:opacity-100&#x27;</span><span class="token punctuation">,</span>
      <span class="token comment">// ...</span>
      <span class="token string">&#x27;lg:text-right&#x27;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span></code></pre></div></div><p><strong>Note that while the classic engine will accept regular expressions here, the JIT engine will not</strong>. That’s because when we’re generating classes on demand, the class doesn’t exist until it’s used so we have nothing to match the expression against. So if you’re using just-in-time mode, make sure you’re providing complete class names to get the expected result.</p><p>Next is <code>transform</code>, which lets you transform content for different file extensions before scanning it for potential class names:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js"><span class="token keyword">let</span> remark <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;remark&#x27;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  purge<span class="token operator">:</span> <span class="token punctuation">{</span>
    content<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;./src/**/*.{html,md}&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    transform<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">md</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token arrow operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword control-flow">return</span> <span class="token function">remark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access">process</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span></code></pre></div></div><p>This is really useful if you have templates that are written in a language that compiles to HTML, like Markdown.</p><p>Finally we have <code>extract</code>, which lets you customize the logic that Tailwind uses to detect class names in specific file types:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  purge<span class="token operator">:</span> <span class="token punctuation">{</span>
    content<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;./src/**/*.{html,md}&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    extract<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">pug</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">content</span><span class="token punctuation">)</span> <span class="token arrow operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword control-flow">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex"><span class="token charset"><span class="token charset-punctuation punctuation">[</span><span class="token charset-negation operator">^</span>&lt;&gt;&quot;&#x27;`<span class="token charclass class-name">\s</span><span class="token charset-punctuation punctuation">]</span></span><span class="token quantifier number">*</span></span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token method function property-access">match</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span></code></pre></div></div><p>This is an advanced feature and most users won’t need it. The default extraction logic in Tailwind works extremely well for almost all projects.</p><p>For more information on these features, check out our <a href="https://tailwindcss.com/docs/optimizing-for-production">optimizing for production documentation</a>.</p><hr/><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="upgrading"><a href="#upgrading" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Upgrading</span></h2><p>To upgrade to Tailwind CSS v2.2, install the latest release from npm:</p><pre class="language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -D tailwindcss@latest</code></pre><p>If you are using the Just-in-Time mode preview, you’ll also want to read through the <a href="https://github.com/tailwindlabs/tailwindcss/releases/tag/v2.2.0#changes-and-deprecations">changes and deprecations</a> in the release notes.</p><p class="border-t border-gray-200 mt-8 pt-6 dark:border-gray-200/5">Ready to upgrade? <a href="https://npmjs.com/tailwindcss">Get it from npm →</a></p><p><em>(The post <a href="https://teteva.github.io/blog/tailwindcss-2-2">Tailwind CSS v2.2</a> appeared first on <a href="https://teteva.github.io/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://teteva.github.io/_next/static/media/card.16a69957a5b5ca1ded1fd8e6aafbe5de.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Tailwind CSS v2.1]]></title>
            <link>https://teteva.github.io/blog/tailwindcss-2-1</link>
            <guid>Tailwind CSS v2.1</guid>
            <pubDate>Mon, 05 Apr 2021 19:00:00 GMT</pubDate>
            <description><![CDATA[We just released Tailwind CSS v2.1 which brings the new JIT engine to core, adds first-class CSS filter support, and more!]]></description>
            <content:encoded><![CDATA[<p>The first new feature update since Tailwind CSS v2.0 is here and loaded with lots of cool stuff! We’ve merged the new JIT engine to core, added first-class support for composable CSS filters, added blending mode utilities, and a bunch more.</p><p>Here are some of the highlights:</p><ul role="list"><li><a href="#jit-engine-in-core">JIT engine in core</a></li><li><a href="#new-filter-and-backdrop-filter-utilities">Composable CSS filters API</a></li><li><a href="#new-blending-mode-utilities">New blending mode utilities</a></li><li><a href="#new-isolation-utilities">New isolation utilities</a></li></ul><p>For the full details, <a href="https://github.com/tailwindlabs/tailwindcss/releases/tag/v2.1.0">check out the release notes</a> on GitHub.</p><hr/><a name="jit-engine-in-core"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="jit-engine-in-core"><a href="#jit-engine-in-core" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>JIT engine in core</span></h2><p>The <a href="https://blog.tailwindcss.com/just-in-time-the-next-generation-of-tailwind-css">brand-new JIT engine we announced in March</a> has now been merged into core, and is available as an opt-in feature using a new <code>mode</code> option in your <code>tailwind.config.js</code> file:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  mode<span class="token operator">:</span> <span class="token string">&#x27;jit&#x27;</span><span class="token punctuation">,</span>
  purge<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span></code></pre></div></div><p><strong>This feature is still in preview</strong> which means some details may change as we iron out the kinks, and it’s not subject to semantic versioning.</p><p>If you were using <code>@tailwindcss/jit</code> before, you can now migrate to Tailwind CSS v2.1 instead, as that’s where all new development on the engine will happen.</p><p>Read the <a href="https://tailwindcss.com/docs/just-in-time-mode">Just-in-Time Mode documentation</a> to learn more.</p><a name="new-filter-and-backdrop-filter-utilities"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="composable-css-filters-api"><a href="#composable-css-filters-api" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Composable CSS filters API</span></h2><p>This is a huge one — we’ve finally added first-class support for CSS filters!</p><p>They work a lot like our <code>transform</code> utilities, where you use <code>filter</code> to enable filters, and combine it with utilities like <code>grayscale</code>, <code>blur-lg</code>, or <code>saturate-200</code> to compose filters on the fly.</p><p>Here’s what <code>filter</code> looks like:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filter blur-md grayscale invert ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>…and here’s what <code>backdrop-filter</code> looks like:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>backdrop-filter backdrop-blur backdrop-brightness-50 ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Check out the <a href="https://tailwindcss.com/docs/filter">filter</a> and <a href="https://tailwindcss.com/docs/backdrop-filter">backdrop-filter</a> to learn more. We’ll add a bunch of helpful visual examples there soon!</p><a name="new-blending-mode-utilities"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="new-blending-mode-utilities"><a href="#new-blending-mode-utilities" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New blending mode utilities</span></h2><p>We’ve added brand new utilities for <code>mix-blend-mode</code> and <code>background-blend-mode</code>:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mix-blend-multiply ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Check out <a href="https://tailwindcss.com/docs/mix-blend-mode">the documentation</a> to learn more.</p><a name="new-isolation-utilities"></a><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="new-isolation-utilities"><a href="#new-isolation-utilities" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New isolation utilities</span></h2><p>We’ve added new <code>isolate</code> and <code>isolation-auto</code> utilities for working with the <code>isolation</code> property:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isolate ...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>This can be really helpful for scoping blending mode features or z-index adjustments and is super powerful. Check out <a href="https://tailwindcss.com/docs/isolation">the documentation</a> to learn more.</p><p>I also highly recommend <a href="https://www.joshwcomeau.com/css/stacking-contexts/#airtight-abstractions-with-isolation">this great article by Josh Comeau</a> to see it in action.</p><hr/><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="upgrading"><a href="#upgrading" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Upgrading</span></h2><p>Tailwind CSS v2.1 is an incremental upgrade with no breaking changes, so to upgrade you just need to run:</p><pre class="language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> tailwindcss@latest</code></pre><p>If you were previously using <code>@tailwindcss/jit</code>, you can now switch back to <code>tailwindcss</code> and update your PostCSS configuration accordingly.</p><p class="border-t border-gray-200 mt-8 pt-6 dark:border-gray-200/5">Ready to upgrade? <a href="https://npmjs.com/tailwindcss">Get it from npm →</a></p><p><em>(The post <a href="https://teteva.github.io/blog/tailwindcss-2-1">Tailwind CSS v2.1</a> appeared first on <a href="https://teteva.github.io/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://teteva.github.io/_next/static/media/card.3bf3cbd50f2798709f66eeefbfdb1eaf.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Tailwind CSS v1.9.0]]></title>
            <link>https://teteva.github.io/blog/tailwindcss-1-9</link>
            <guid>Tailwind CSS v1.9.0</guid>
            <pubDate>Tue, 13 Oct 2020 18:30:00 GMT</pubDate>
            <description><![CDATA[We just released Tailwind CSS v1.9 which adds support for configuration presets, useful new CSS grid utilities, extended border radius, rotate, and skew scales, helpful accessibility improvements, and more!]]></description>
            <content:encoded><![CDATA[<p>We just released Tailwind CSS v1.9 which adds support for configuration presets, useful new CSS grid utilities, extended border radius, rotate, and skew scales, helpful accessibility improvements, and more!</p><p>Let’s dig in to the highlights…</p><ul role="list"><li><a href="#configuration-presets">Configuration presets</a></li><li><a href="#utilities-for-grid-auto-columns-and-grid-auto-rows">Utilities for <code>grid-auto-columns</code> and <code>grid-auto-rows</code></a></li><li><a href="#focus-indicator-improvements-and-configurable-outlines">Focus indicator improvements and configurable outlines</a></li><li><a href="#extended-border-radius-rotate-and-skew-scales">Extended border radius, rotate, and skew scales</a></li><li><a href="#upgrading">Upgrading to v1.9</a></li></ul><p>For the complete summary of changes <a href="https://github.com/tailwindlabs/tailwindcss/releases/tag/v1.9.0">check out the release notes on GitHub</a>.</p><hr/><h2 id="configuration-presets">Configuration presets</h2><p>Tailwind CSS v1.9 adds a new <code>presets</code> key to the <code>tailwind.config.js</code> file that makes it possible to configure a custom “base configuration” for your projects.</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;@my-company/tailwind-base&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  theme<span class="token operator">:</span> <span class="token punctuation">{</span>
    extend<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// Project specific overrides...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>Whatever you provide under <code>presets</code> <em>replaces</em> the default Tailwind base configuration, so you can define your own totally custom starting point. This is really helpful if you’re part of a team that works on multiple different Tailwind projects that all need to share the same brand colors, font customizations, or spacing scale.</p><p>You can even list multiple presets, which are merged together from top to bottom:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  presets<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;@my-company/tailwind-base&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#x27;@my-company/tailwind-marketing&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  theme<span class="token operator">:</span> <span class="token punctuation">{</span>
    extend<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// Project specific overrides...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>The logic to merge your project-specific configuration with your custom base configuration is exactly the same as how things work with the default configuration, so all of the features you’re used to like <code>extend</code> still work exactly the way you’d expect.</p><hr/><h2 id="utilities-for-grid-auto-columns-and-grid-auto-rows">Utilities for grid-auto-columns and grid-auto-rows</h2><p>We’ve added new <code>gridAutoColumns</code> and <code>gridAutoRows</code> core plugins that add new utilities for the <code>grid-auto-columns</code> and <code>grid-auto-rows</code> CSS properties respectively.</p><p>These utilities let you control the size of implicitly-created grid columns and rows. Use them to set a default column/row size whenever you don’t specify a number of columns/rows for your grid.</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>grid grid-flow-col auto-cols-max<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Here’s a list of the new utilities that are included out of the box:</p><table><thead><tr><th>Class</th><th>CSS</th></tr></thead><tbody><tr><td><code>auto-cols-auto</code></td><td><code>grid-auto-columns: auto;</code></td></tr><tr><td><code>auto-cols-min</code></td><td><code>grid-auto-columns: min-content;</code></td></tr><tr><td><code>auto-cols-max</code></td><td><code>grid-auto-columns: max-content;</code></td></tr><tr><td><code>auto-cols-fr</code></td><td><code>grid-auto-columns: minmax(0, 1fr);</code></td></tr><tr><td><code>auto-rows-auto</code></td><td><code>grid-auto-rows: auto;</code></td></tr><tr><td><code>auto-rows-min</code></td><td><code>grid-auto-rows: min-content;</code></td></tr><tr><td><code>auto-rows-max</code></td><td><code>grid-auto-rows: max-content;</code></td></tr><tr><td><code>auto-rows-fr</code></td><td><code>grid-auto-rows: minmax(0, 1fr);</code></td></tr></tbody></table><p>We include <code>responsive</code> variants for these utilities by default, and they can be configured just like you’d expect under the <code>gridAutoColumns</code> and <code>gridAutoRows</code> sections of your <code>tailwind.config.js</code> file.</p><hr/><h2 id="focus-indicator-improvements-and-configurable-outlines">Focus indicator improvements and configurable outlines</h2><p>We’ve updated the <code>outline-none</code> class to render a <em>transparent</em> outline by default instead of rendering <em>no</em> outline. This is really helpful for people who use <a href="https://blogs.windows.com/msedgedev/2020/09/17/styling-for-windows-high-contrast-with-new-standards-for-forced-colors/">Windows high contrast mode</a>, where custom box-shadow-based focus styles are completely invisible.</p><p>Now you can create custom focus styles using box shadows <em>safely</em>, without making your sites difficult to use for people with low vision.</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>... focus:outline-none focus:shadow-outline<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></code></pre><p>We’ve also added two new outline styles: <code>outline-white</code> and <code>outline-black</code>.</p><p>These utilities render a 2px dotted outline in their respective color, with a 2px offset. They work great as general purpose unobtrusive focus indicators that make it easy for keyboard users to see which element on the screen is selected, without clashing too much with your design.</p><p>We’ve included both <code>white</code> and <code>black</code> variations so you can always be sure to have an option available that has sufficient contrast against whatever background color you’re using.</p><pre class="language-html"><code class="language-html"><span class="token comment">&lt;!-- Use `outline-white` on dark backgrounds --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-gray-900<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>... focus:outline-white<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- ... --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- Use `outline-black` on light backgrounds --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-white<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>... focus:outline-black<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- ... --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Of course, you’re also free to create whatever custom focus styles you like using background colors, box shadows, borders, whatever. These are great if you don’t want to get too fancy though.</p><p>We’ve made the <code>outline</code> property configurable as well, so you can now define custom outlines in your <code>tailwind.config.js</code> file:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  theme<span class="token operator">:</span> <span class="token punctuation">{</span>
    extend<span class="token operator">:</span> <span class="token punctuation">{</span>
      outline<span class="token operator">:</span> <span class="token punctuation">{</span>
        blue<span class="token operator">:</span> <span class="token string">&#x27;2px solid #0000ff&#x27;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>You can also provide an <code>outline-offset</code> value for any custom outline utilities using a tuple of the form <code>[outline, outlineOffset]</code>:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  theme<span class="token operator">:</span> <span class="token punctuation">{</span>
    extend<span class="token operator">:</span> <span class="token punctuation">{</span>
      outline<span class="token operator">:</span> <span class="token punctuation">{</span>
        blue<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;2px solid #0000ff&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;1px&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><hr/><h2 id="extended-border-radius-rotate-and-skew-scales">Extended border radius, rotate, and skew scales</h2><p>We’ve added three new border radius utilities by default:</p><table><thead><tr><th>Class</th><th>Value</th></tr></thead><tbody><tr><td><code>rounded-xl</code></td><td><code>0.75rem</code> <em>(12px)</em></td></tr><tr><td><code>rounded-2xl</code></td><td><code>1rem</code> <em>(16px)</em></td></tr><tr><td><code>rounded-3xl</code></td><td><code>1.5rem</code><em>(24px)</em></td></tr></tbody></table><p>…and an extended set of smaller values for both the <code>rotate</code> and <code>skew</code> utilities:</p><table><thead><tr><th>Class</th><th>Value</th></tr></thead><tbody><tr><td><code>rotate-1</code></td><td><code>1deg</code></td></tr><tr><td><code>rotate-2</code></td><td><code>2deg</code></td></tr><tr><td><code>rotate-3</code></td><td><code>3deg</code></td></tr><tr><td><code>rotate-6</code></td><td><code>6deg</code></td></tr><tr><td><code>rotate-12</code></td><td><code>12deg</code></td></tr><tr><td><code>skew-1</code></td><td><code>1deg</code></td></tr><tr><td><code>skew-2</code></td><td><code>2deg</code></td></tr></tbody></table><p>Negative versions are included for all of these as well. Super handy for more subtle rotate and skew effects!</p><hr/><h2 id="upgrading">Upgrading</h2><p>Tailwind CSS v1.9 is a non-breaking minor release, so to upgrade all you need to do is run:</p><pre class="language-bash"><code class="language-bash"><span class="token comment"># npm</span>
<span class="token function">npm</span> <span class="token function">install</span> tailwindcss@^1.9

<span class="token comment"># yarn</span>
<span class="token function">yarn</span> <span class="token function">add</span> tailwindcss@^1.9</code></pre><p>We have promoted two previously experimental features (<code>defaultLineHeights</code> and <code>standardFontWeights</code>) to <code>future</code>, so we also recommend <a href="https://tailwindcss.com/docs/upcoming-changes#default-line-heights-for-font-size-utilities">opting-in to those changes now</a> to simplify the upgrade to Tailwind CSS v2.0 later this fall.</p><p class="border-t border-gray-200 mt-8 pt-6 dark:border-gray-200/5">Want to talk about this post? <a href="https://github.com/tailwindcss/tailwindcss/discussions/2552">Discuss this on GitHub →</a></p><p><em>(The post <a href="https://teteva.github.io/blog/tailwindcss-1-9">Tailwind CSS v1.9.0</a> appeared first on <a href="https://teteva.github.io/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://teteva.github.io/_next/static/media/card.ed7b73cc8739ab2abd600c22f712a1e5.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Tailwind CSS v1.8.0]]></title>
            <link>https://teteva.github.io/blog/tailwindcss-1-8</link>
            <guid>Tailwind CSS v1.8.0</guid>
            <pubDate>Fri, 04 Sep 2020 20:15:00 GMT</pubDate>
            <description><![CDATA[Tailwind CSS v1.8.0 is now available, with font-variant-numeric support, experimental dark mode, and more!]]></description>
            <content:encoded><![CDATA[<p>Tailwind CSS v1.8 is now available with a handful of new utilities, a couple new features, and an exciting new experiment!</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="new-features"><a href="#new-features" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New features</span></h2><ul role="list"><li>New <code>font-variant-numeric</code> utilities (<a href="https://github.com/tailwindlabs/tailwindcss/pull/2305">#2305</a>)</li><li>New <code>place-items</code>, <code>place-content</code>, <code>place-self</code>, <code>justify-items</code>, and <code>justify-self</code> utilities (<a href="https://github.com/tailwindlabs/tailwindcss/pull/2306">#2306</a>)</li><li>New <code>preserveHtmlElements</code> option for <code>purge</code> (<a href="https://github.com/tailwindlabs/tailwindcss/pull/2283">#2283</a>)</li><li>New <code>layers</code> mode for <code>purge</code> (<a href="https://github.com/tailwindlabs/tailwindcss/pull/2288">#2288</a>)</li><li>Support configuring variants as functions (<a href="https://github.com/tailwindlabs/tailwindcss/pull/2309">#2309</a>)</li><li>Dark mode variant (experimental) (<a href="https://github.com/tailwindlabs/tailwindcss/pull/2279">#2279</a>)</li></ul><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="changes"><a href="#changes" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Changes</span></h2><ul role="list"><li>CSS within <code>@layer</code> at-rules are now grouped with the corresponding <code>@tailwind</code> at-rule (<a href="https://github.com/tailwindlabs/tailwindcss/pull/2312">#2312</a>)</li></ul><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="deprecations"><a href="#deprecations" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Deprecations</span></h2><ul role="list"><li>The <code>conservative</code> purge mode has been deprecated in favor of the new <code>layers</code> mode (<a href="https://github.com/tailwindlabs/tailwindcss/pull/2288">#2288</a>)</li></ul><p>Check out the <a href="https://github.com/tailwindlabs/tailwindcss/releases/tag/v1.8.0">full release notes on GitHub</a> for more details.</p><p class="border-t border-gray-200 mt-8 pt-6 dark:border-gray-200/5">Want to talk about this post? <a href="https://github.com/tailwindcss/tailwindcss/discussions/2315">Discuss this on GitHub →</a></p><p><em>(The post <a href="https://teteva.github.io/blog/tailwindcss-1-8">Tailwind CSS v1.8.0</a> appeared first on <a href="https://teteva.github.io/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://teteva.github.io/_next/static/media/card.589eb984c063beb9a8c9697648974596.jpg" length="0" type="image/jpg"/>
        </item>
        <item>
            <title><![CDATA[Tailwind CSS v1.7.0]]></title>
            <link>https://teteva.github.io/blog/tailwindcss-1-7</link>
            <guid>Tailwind CSS v1.7.0</guid>
            <pubDate>Tue, 18 Aug 2020 19:15:00 GMT</pubDate>
            <description><![CDATA[Tailwind CSS v1.7.0 is now available, with gradients and more!]]></description>
            <content:encoded><![CDATA[<p>Another new Tailwind release is here! This time with support for gradients, background-clip, experimental support for using <code>@apply</code> with variant utilities, and tons more. Let’s dig in!</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4 mb-2 text-sm leading-6 text-sky-500 font-semibold tracking-normal dark:text-sky-400" id="new-features"><a href="#new-features" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New features</span></h2><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="gradients"><a href="#gradients" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Gradients</span></h3><p>The big one for this release — Tailwind now ships with built-in support for background gradients!</p><p>Gradients are designed with a highly composable API that lets you specify up to three color stops in one of 8 directions by default:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-gradient-to-r from-orange-400 via-red-500 to-pink-500<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="https://user-images.githubusercontent.com/4323180/90427639-ce57e280-e090-11ea-8611-53a64707fafc.png"/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div></p><p>This is made possible by a new <code>backgroundImage</code> core plugin (which you can use for any background images you like!) and a new <code>gradientColorStops</code> core plugin.</p><p>The default configuration for these plugins looks like this:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  theme<span class="token operator">:</span> <span class="token punctuation">{</span>
    backgroundImage<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string">&#x27;gradient-to-t&#x27;</span><span class="token operator">:</span> <span class="token string">&#x27;linear-gradient(to top, var(--gradient-color-stops))&#x27;</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;gradient-to-tr&#x27;</span><span class="token operator">:</span> <span class="token string">&#x27;linear-gradient(to top right, var(--gradient-color-stops))&#x27;</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;gradient-to-r&#x27;</span><span class="token operator">:</span> <span class="token string">&#x27;linear-gradient(to right, var(--gradient-color-stops))&#x27;</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;gradient-to-br&#x27;</span><span class="token operator">:</span> <span class="token string">&#x27;linear-gradient(to bottom right, var(--gradient-color-stops))&#x27;</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;gradient-to-b&#x27;</span><span class="token operator">:</span> <span class="token string">&#x27;linear-gradient(to bottom, var(--gradient-color-stops))&#x27;</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;gradient-to-bl&#x27;</span><span class="token operator">:</span> <span class="token string">&#x27;linear-gradient(to bottom left, var(--gradient-color-stops))&#x27;</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;gradient-to-l&#x27;</span><span class="token operator">:</span> <span class="token string">&#x27;linear-gradient(to left, var(--gradient-color-stops))&#x27;</span><span class="token punctuation">,</span>
      <span class="token string">&#x27;gradient-to-tl&#x27;</span><span class="token operator">:</span> <span class="token string">&#x27;linear-gradient(to top left, var(--gradient-color-stops))&#x27;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">gradientColorStops</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">theme</span><span class="token punctuation">)</span> <span class="token arrow operator">=&gt;</span> <span class="token function">theme</span><span class="token punctuation">(</span><span class="token string">&#x27;colors&#x27;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  variants<span class="token operator">:</span> <span class="token punctuation">{</span>
    backgroundImage<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;responsive&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    gradientColorStops<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;responsive&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;hover&#x27;</span><span class="token punctuation">,</span> <span class="token string">&#x27;focus&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>Learn more <a href="https://github.com/tailwindlabs/tailwindcss/pull/2176">the original pull request</a>.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="new-background-clip-utilities"><a href="#new-background-clip-utilities" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New background-clip utilities</span></h3><p>We’ve also added a new <code>backgroundClip</code> core plugin that you can use to control how background are rendered within an element.</p><p>It includes 4 new utilities:</p><table><thead><tr><th>Class</th><th>CSS</th></tr></thead><tbody><tr><td><code>bg-clip-border</code></td><td><code>background-clip: border-box</code></td></tr><tr><td><code>bg-clip-padding</code></td><td><code>background-clip: padding-box</code></td></tr><tr><td><code>bg-clip-content</code></td><td><code>background-clip: content-box</code></td></tr><tr><td><code>bg-clip-text</code></td><td><code>background-clip: text</code></td></tr></tbody></table><p>Combined with the new gradient features, you can use this to do cool gradient text stuff like this:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-6xl font-bold<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bg-clip-text text-transparent bg-gradient-to-r from-teal-400 to-blue-500<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    Greetings from Tailwind v1.7.
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></code></pre><p><div class="relative not-prose my-[2em] first:mt-0 last:mb-0 rounded-lg overflow-hidden"><img src="https://user-images.githubusercontent.com/4323180/90427567-b54f3180-e090-11ea-988b-c95ed716866f.png"/><div class="absolute inset-0 rounded-lg ring-1 ring-inset ring-gray-900/10"></div></div></p><p>Only responsive variants are enabled for the <code>backgroundClip</code> plugin by default:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  variants<span class="token operator">:</span> <span class="token punctuation">{</span>
    backgroundClip<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;responsive&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="new-gap-utility-aliases"><a href="#new-gap-utility-aliases" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New gap utility aliases</span></h3><p>For some dumb reason I named the <code>column-gap</code> and <code>row-gap</code> utilities <code>col-gap-{n}</code> and <code>row-gap-{n}</code> respectively, which isn’t terrible but it’s not consistent with how other things in Tailwind are named.</p><p>I was finding myself getting them wrong all the time — is <code>row-gap</code> the gaps in a row, or the gap between rows?</p><p>Tailwind v1.7 introduces new <code>gap-x-{n}</code> and <code>gap-y-{n}</code> utilities that do the exact same thing but have names that don’t suck. They make way more sense than the actual CSS names now that gap for flexbox is starting to roll out too, since flexbox has no “columns”.</p><p>These utilities will replace the old ones in v2.0, but for now they both exist together.</p><p><strong>We recommend migrating to the new names now, and disabling the old names using this feature flag:</strong></p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  future<span class="token operator">:</span> <span class="token punctuation">{</span>
    removeDeprecatedGapUtilities<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span></code></pre></div></div><p>Tailwind will issue a warning in the console to remind you that you are including deprecated classes in your build until you enable this flag.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="new-display-utility"><a href="#new-display-utility" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New contents display utility</span></h3><p>We’ve added a new <code>contents</code> class for the recent <code>display: contents</code> CSS feature.</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- ... --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- This container will act as a phantom container, and its children will be treated as part of the parent flex container --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>contents<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- ... --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- ... --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- ... --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>Learn more about it in <a href="https://rachelandrew.co.uk/archives/2016/01/29/vanishing-boxes-with-display-contents/">this great article by Rachel Andrew</a>.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="default-letter-spacing-per-font-size"><a href="#default-letter-spacing-per-font-size" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Default letter-spacing per font-size</span></h3><p>You can now configure a default letter-spacing value for each font-size in your <code>tailwind.config.js</code> theme, using a tuple syntax:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  theme<span class="token operator">:</span> <span class="token punctuation">{</span>
    fontSize<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token number">2</span>xl<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;24px&#x27;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        letterSpacing<span class="token operator">:</span> <span class="token string">&#x27;-0.01em&#x27;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token comment">// Or with a default line-height as well</span>
      <span class="token number">3</span>xl<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;32px&#x27;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        letterSpacing<span class="token operator">:</span> <span class="token string">&#x27;-0.02em&#x27;</span><span class="token punctuation">,</span>
        lineHeight<span class="token operator">:</span> <span class="token string">&#x27;40px&#x27;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre></div></div><p>This new syntax is supported in addition to the simpler <code>[{fontSize}, {lineHeight}]</code> syntax that was recently introduced.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="divide-border-styles"><a href="#divide-border-styles" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Divide border styles</span></h3><p>We’ve added utilities for setting the border style on the <code>divide</code> utilities:</p><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>divide-y divide-dashed<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- ... --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- ... --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- ... --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- ... --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></code></pre><p>These utilities include <code>responsive</code> variants by default:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  variants<span class="token operator">:</span> <span class="token punctuation">{</span>
    divideStyle<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#x27;responsive&#x27;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="access-entire-config-object-from-plugins"><a href="#access-entire-config-object-from-plugins" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Access entire config object from plugins</span></h3><p>The <code>config</code> function passed to the plugin API now returns the entire config option when invoked with no arguments:</p><pre class="language-js"><code class="language-js">tailwind<span class="token punctuation">.</span><span class="token method function property-access">plugin</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> config<span class="token punctuation">,</span> addUtilities<span class="token punctuation">,</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Returns entire config object</span>
  <span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="define-colors-as-closures"><a href="#define-colors-as-closures" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Define colors as closures</span></h3><p>You can now define your colors as callbacks, which receive a bag of parameters you can use to generate your color value.</p><p>This is particularly useful when trying to make your custom colors work with the <code>backgroundOpacity</code>, <code>textOpacity</code>, etc. utilities</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  theme<span class="token operator">:</span> <span class="token punctuation">{</span>
    colors<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">primary</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> opacityVariable <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">rgba(var(--color-primary), var(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>variable<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, 1))</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>Currently the only thing passed through is an <code>opacityVariable</code> property, which contains the name of the current opacity variable (<code>--background-opacity</code>, <code>--text-opacity</code>, etc.) depending on which plugin is using the color.</p><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="deprecations"><a href="#deprecations" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Deprecations</span></h2><p>Tailwind v1.7 introduces a new feature flagging and deprecation system designed to make upgrades as painless as possible.</p><p>Any time we deprecate functionality or introduce new (stable) breaking changes, they will be available in Tailwind v1.x under a <code>future</code> property in your <code>tailwind.config.js</code> file.</p><p>Whenever there are deprecations or breaking changes available, Tailwind will warn you in the console on every build until you adopt the new changes and enable the flag in your config file:</p><pre><code>risk - There are upcoming breaking changes: removeDeprecatedGapUtilities
risk - We highly recommend opting-in to these changes now to simplify upgrading Tailwind in the future.
risk - https://tailwindcss.com/docs/upcoming-changes
</code></pre><p>You can opt-in to a breaking change by setting that flag to <code>true</code> in your <code>tailwind.config.js</code> file:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  future<span class="token operator">:</span> <span class="token punctuation">{</span>
    removeDeprecatedGapUtilities<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>If you’d prefer not to opt-in but would like to silence the warning, explicitly set the flag to <code>false</code>:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  future<span class="token operator">:</span> <span class="token punctuation">{</span>
    removeDeprecatedGapUtilities<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p><strong>We do not recommend this</strong>, as it will make upgrading to Tailwind v2.0 more difficult.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="deprecated-gap-utilities"><a href="#deprecated-gap-utilities" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Deprecated gap utilities</span></h3><p>As mentioned previously, Tailwind v1.7.0 introduces new <code>gap-x-{n}</code> and <code>gap-y-{n}</code> utilities to replace the current <code>col-gap-{n}</code> and <code>row-gap-{n}</code> utilities.</p><p>By default both classes will exist, but the old utilities will be removed in Tailwind v2.0.</p><p>To migrate to the new class names, simply replace any existing usage of the old names with the new names:</p><pre class="language-diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> &lt;div class=&quot;col-gap-4 row-gap-2 ...&quot;&gt;
</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> &lt;div class=&quot;gap-x-4 gap-y-2 ...&quot;&gt;</span></span></code></pre><p>To opt-in to the new names now, enable the <code>removeDeprecatedGapUtilities</code> flag in your <code>tailwind.config.js</code> file:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  future<span class="token operator">:</span> <span class="token punctuation">{</span>
    removeDeprecatedGapUtilities<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><h2 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="experimental-features"><a href="#experimental-features" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Experimental features</span></h2><p>Tailwind v1.7.0 introduces a new experimental feature system that allows you to opt-in to new functionality that is coming to Tailwind soon but isn’t quite stable yet.</p><p>It’s important to note that <strong>experimental features may introduce breaking changes, do not follow semver, and can change at any time</strong>.</p><p>If you like to live on the wild side though, you can enable all of them like so:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  experimental<span class="token operator">:</span> <span class="token string">&#x27;all&#x27;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>With that out of the way, here is some of the fun stuff we’re working on that we’re pumped you can finally play with…</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="use-with-variants-and-other-complex-classes"><a href="#use-with-variants-and-other-complex-classes" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Use @apply with variants and other complex classes</span></h3><p>This is a huge one — you can finally use <code>@apply</code> with responsive variants, pseudo-class variants, and other complex classes!</p><pre class="language-css"><code class="language-css"><span class="token selector"><span class="token class">.btn</span></span> <span class="token punctuation">{</span>
  <span class="token atrule atapply"><span class="token rule">@apply</span> bg-indigo <span class="token property">hover</span><span class="token punctuation">:</span>bg-indigo-700 <span class="token property">sm</span><span class="token punctuation">:</span>text-lg<span class="token punctuation">;</span></span>
<span class="token punctuation">}</span></code></pre><p>There are a lot of details to understand with this one, so I recommend <a href="https://github.com/tailwindlabs/tailwindcss/pull/2159">reading the pull request</a> to learn about how it all works.</p><p>This introduces breaking changes to how <code>@apply</code> worked before, so be sure to read all of the details before just flipping the switch.</p><p>To enable this feature, use the <code>applyComplexClasses</code> flag:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  experimental<span class="token operator">:</span> <span class="token punctuation">{</span>
    applyComplexClasses<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="new-color-palette"><a href="#new-color-palette" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>New color palette</span></h3><p>We’ve added a teaser of the new Tailwind 2.0 color palette that you can start playing with today using the <code>uniformColorPalette</code> flag:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  experimental<span class="token operator">:</span> <span class="token punctuation">{</span>
    uniformColorPalette<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>The idea behind the new palette is that every color at every shade has a similar perceived brightness. So you can swap <code>indigo-600</code> with <code>blue-600</code> and expect the same color contrast.</p><p>We do expect these colors to continue to change a lot as we iterate on them, so use these at your own risk.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="extended-spacing-scale"><a href="#extended-spacing-scale" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Extended spacing scale</span></h3><p>We’ve added a much bigger spacing scale that includes new micro values like <code>0.5</code>, <code>1.5</code>, <code>2.5</code>, and <code>3.5</code>, as well as new large values like <code>72</code>, <code>80</code>, and <code>96</code>, <em>and</em> added percentage based fractional values to the whole spacing scale (<code>1/2</code>, <code>5/6</code>, <code>7/12</code>, etc.)</p><p>You can enable the extended spacing scale using the <code>extendedSpacingScale</code> flag:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  experimental<span class="token operator">:</span> <span class="token punctuation">{</span>
    extendedSpacingScale<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>This is pretty stable, I would be surprised if we change this.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="default-line-heights-per-font-size-by-default"><a href="#default-line-heights-per-font-size-by-default" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Default line-heights per font-size by default</span></h3><p>We’ve added recommended default line-heights to every built-in font-size, which can be enabled using the <code>defaultLineHeights</code> flag:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  experimental<span class="token operator">:</span> <span class="token punctuation">{</span>
    defaultLineHeights<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p>This is a breaking change and will impact your designs, as previously all font sizes had a default line-height of <code>1.5</code>.</p><h3 class="group flex whitespace-pre-wrap -ml-4 pl-4" id="extended-font-size-scale"><a href="#extended-font-size-scale" class="absolute -ml-10 flex items-center opacity-0 border-0 group-hover:opacity-100" aria-label="Anchor">​<div class="w-6 h-6 text-gray-400 ring-1 ring-gray-900/5 rounded-md shadow-sm flex items-center justify-center hover:ring-gray-900/10 hover:shadow hover:text-gray-700 dark:bg-gray-700 dark:text-gray-300 dark:shadow-none dark:ring-0"><svg width="12" height="12" fill="none" aria-hidden="true"><path d="M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path></svg></div></a><span>Extended font size scale</span></h3><p>We’ve added three new font sizes (<code>7xl</code>, <code>8xl</code>, and <code>9xl</code>) to keep up with the latest huge-as-hell-hero-text trends. They include default line-heights as well.</p><p>You can enable them under the <code>extendedFontSizeScale</code> flag:</p><div class="mt-5 mb-8 first:mt-0 last:mb-0 pt-2 bg-gray-800 rounded-xl shadow-lg overflow-hidden dark:ring-1 dark:ring-white/10 dark:ring-inset"><div class="flex text-gray-400 text-xs leading-6"><div class="flex-none text-sky-300 border-t border-b border-t-transparent border-b-sky-300 px-4 py-1 flex items-center">tailwind.config.js</div><div class="flex-auto flex items-center bg-gray-700/50 border border-gray-500/30 rounded-tl"></div></div><div class="children:my-0 children:!shadow-none children:bg-transparent"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  experimental<span class="token operator">:</span> <span class="token punctuation">{</span>
    extendedFontSizeScale<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span></code></pre></div></div><p class="border-t border-gray-200 mt-8 pt-6 dark:border-gray-200/5">Want to talk about this post? <a href="https://github.com/tailwindcss/tailwindcss/discussions/2183">Discuss this on GitHub →</a></p><p><em>(The post <a href="https://teteva.github.io/blog/tailwindcss-1-7">Tailwind CSS v1.7.0</a> appeared first on <a href="https://teteva.github.io/blog">Tailwind CSS Blog</a>.)</em></p>]]></content:encoded>
            <enclosure url="https://teteva.github.io/_next/static/media/card.3f7399a601caf3bbc6c5461e33429509.jpg" length="0" type="image/jpg"/>
        </item>
    </channel>
</rss>